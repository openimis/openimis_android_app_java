import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

apply plugin: 'com.android.application'
apply from: "$project.rootDir/script-git-version.gradle"
apply plugin: 'com.android.application'

// Load keystore
def keystorePropertiesFile = file("keystore.properties");
def keystoreProperties = new Properties()
if ( keystorePropertiesFile.exists() ) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

//generate date
static def getDate() {
    LocalDateTime date = LocalDateTime.now()
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern('dd MMMM yyyy HH:mm').withLocale(Locale.UK)
    return date.format(formatter)
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'
    if ( keystorePropertiesFile.exists() ) {
        signingConfigs {
            releaseConfig {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }
    defaultConfig {
        applicationId "org.openimis.imispolicies"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode gitVersionCode
        versionName gitVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        useLibrary('org.apache.http.legacy')
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable = false
            if ( keystorePropertiesFile.exists() ) {
                signingConfig signingConfigs.releaseConfig
            }
        }
        debug {
            debuggable = true
        }
        flavorDimensions 'std'
    }
    flavorDimensions 'std'
    productFlavors.all {
        buildConfigField "String", "API_BASE_URL", '"http://demo.openimis.org/rest/"'
        buildConfigField "boolean", "SHOW_CONTROL_NUMBER_MENU", 'false'
        buildConfigField "String", "RAR_PASSWORD", '")(#$1HsD"'
        buildConfigField "String", "APP_DIR", '"IMIS"'
        resValue "string", "app_name_policies", "Policies"
        resValue "string", "ReleaseDateValue", getDate()
    }
    productFlavors {
        demoProd {
            applicationId "org.openimis.imispolicies.demoProd"
            buildConfigField "String", "API_BASE_URL", '"http://demo.openimis.org/rest/"'
            buildConfigField "String", "RAR_PASSWORD", '")(#$1HsD"'
            buildConfigField "String", "APP_DIR", '"IMIS-DEMOPROD"'
            resValue "string", "app_name_policies", "Policies Demo"
            dimension = 'std'
        }

        demoRelease {
            applicationId "org.openimis.imispolicies.demoRelease"
            buildConfigField "String", "API_BASE_URL", '"http://release.openimis.org/rest/"'
            buildConfigField "String", "APP_DIR", '"IMIS-DEMORELEASE"'
            resValue "string", "app_name_policies", "Policies Release"
        }

        chfDev {
            applicationId "org.openimis.imispolicies.chf"
            buildConfigField "String", "API_BASE_URL", '"http://chf-dev.swisstph-mis.ch/rest/"'
            buildConfigField "String", "RAR_PASSWORD", '")(#$1HsD"'
            buildConfigField "boolean", "SHOW_CONTROL_NUMBER_MENU", 'true'
            buildConfigField "String", "APP_DIR", '"IMIS-CHFDEV"'
            resValue "string", "app_name_policies", "Policies CHF DEV"
            dimension = 'std'
        }
        mvDev {
            applicationId "org.openimis.imispolicies.mv"
            buildConfigField "String", "API_BASE_URL", '"http://imis-mv.swisstph-mis.ch/rest/"'
            buildConfigField "String", "RAR_PASSWORD", '")(#$1HsD"'
            buildConfigField "boolean", "SHOW_CONTROL_NUMBER_MENU", 'true'
            buildConfigField "String", "APP_DIR", '"IMIS-MVDEV"'
            resValue "string", "app_name_policies", "Policies MV DEV"
            dimension = 'std'
        }
        bephaDev {
            applicationId "org.openimis.imispolicies.bepha"
            buildConfigField "String", "API_BASE_URL", '"http://149.210.235.40/devupgrade/rest/"'
            buildConfigField "String", "RAR_PASSWORD", '")(#$1HsD"'
            buildConfigField "String", "APP_DIR", '"IMIS-BEPHADEV"'
            resValue "string", "app_name_policies", "Policies BEPHA DEV"
            dimension = 'std'
        }
        poralguat {
            applicationId "org.openimis.imispolicies.poralguat"
            buildConfigField "String", "API_BASE_URL", '"http://196.192.73.26/rest/"'
            buildConfigField "String", "RAR_PASSWORD", '")(#$1HsD"'
            buildConfigField "String", "APP_DIR", '"IMIS-PORALGUAT"'
            buildConfigField "boolean", "SHOW_CONTROL_NUMBER_MENU", 'true'
            resValue "string", "app_name_policies", "Policies PORALGUAT"
            dimension = 'std'
        }
        local {
            applicationId "org.openimis.imispolicies.local"
            buildConfigField "String", "API_BASE_URL", '"http://10.0.2.2:35787/"'
            buildConfigField "String", "RAR_PASSWORD", '")(#$1HsD"'
            buildConfigField "String", "APP_DIR", '"IMIS-LOCAL"'
            resValue "string", "app_name_policies", "Policies Local"
            dimension = 'std'
            versionCode = gitVersionCodeTime
        }
    }
    sourceSets {

        chfDev.java.srcDir 'src/chf/java'
        chfDev.res.srcDir 'src/chf/res'

        mvDev.java.srcDir 'src/master/java'

        local.java.srcDir 'src/master/java'
        local.res.srcDir 'src/demo/res'

        bephaDev.java.srcDir 'src/bepha/java'
        bephaDev.res.srcDir 'src/bepha/res'

        [demoProd, demoRelease].each {
            it.java.srcDir 'src/demo/java'
            it.res.srcDir 'src/demo/res'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com/' }
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation  fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile(name: 'CaptureActivity', ext: 'aar')
    compile(name: 'General', ext: 'aar')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    compile files('libs/zip4j-1.2.7.jar')
    compile files('libs/httpclient-4.2.3.jar')
    compile files('libs/httpcore-4.2.3.jar')
//compile 'com.android.support:support-annotations:27.1.1'
}
